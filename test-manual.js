// –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π stat-kit
const {
  mean,
  median,
  stddev,
  zScores,
  correlation,
  findOutliers,
  basicRange,
  iqrRange,
  percentileRange,
  stddevRange,
  skewness,
  sortByX,
  sortByY
} = require('./index');

console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ stat-kit...\n');

// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
const data1 = [1, 2, 3, 4, 5];
const data2 = [10, 12, 14, 16, 18, 100]; // —Å –≤—ã–±—Ä–æ—Å–æ–º
const xData = [1, 2, 3, 4, 5];
const yData = [2, 4, 6, 8, 10];

try {
  // –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  console.log('üìä –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:');
  console.log('mean([1,2,3,4,5]):', mean(data1)); // 3
  console.log('median([1,2,3,4,5]):', median(data1)); // 3
  console.log('stddev([1,2,3,4,5]):', stddev(data1).toFixed(2)); // ~1.58
  console.log('');

  // Z-scores
  console.log('üìà Z-scores:');
  console.log('zScores([1,2,3,4,5]):', zScores(data1).map(z => z.toFixed(2)));
  console.log('');

  // –ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è
  console.log('üîó –ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è:');
  console.log('correlation(xData, yData):', correlation(xData, yData).toFixed(2)); // ~1.00
  console.log('');

  // –í—ã–±—Ä–æ—Å—ã
  console.log('üéØ –í—ã–±—Ä–æ—Å—ã:');
  console.log('findOutliers([10,12,14,16,18,100]):', findOutliers(data2)); // [100]
  console.log('');

  // –î–∏–∞–ø–∞–∑–æ–Ω—ã
  console.log('üìè –î–∏–∞–ø–∞–∑–æ–Ω—ã:');
  console.log('basicRange([10,12,14,16,18,100]):', basicRange(data2)); // 90
  console.log('iqrRange([1,2,3,4,5,6,7,8,9]):', iqrRange([1,2,3,4,5,6,7,8,9])); // 4
  console.log('');

  // –ê—Å–∏–º–º–µ—Ç—Ä–∏—è
  console.log('üìâ –ê—Å–∏–º–º–µ—Ç—Ä–∏—è:');
  console.log('skewness([1,2,3,4,5]):', skewness(data1).toFixed(2)); // ~0
  console.log('skewness([1,1,1,2,3,10]):', skewness([1,1,1,2,3,10]).toFixed(2)); // >0
  console.log('');

  // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
  console.log('üîÑ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞:');
  const points = [{x: 3, y: 1}, {x: 1, y: 5}, {x: 2, y: 3}];
  console.log('sortByX:', sortByX(points));
  console.log('sortByY:', sortByY(points));
  console.log('');

  // –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏
  console.log('‚úÖ –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ (–¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ—à–∏–±–∫–∏):');
  try {
    mean([]);
  } catch (e) {
    console.log('‚úì mean([]) –≤—ã–±—Ä–æ—Å–∏–ª –æ—à–∏–±–∫—É:', e.message);
  }

  try {
    mean('not an array');
  } catch (e) {
    console.log('‚úì mean("not an array") –≤—ã–±—Ä–æ—Å–∏–ª –æ—à–∏–±–∫—É:', e.message);
  }

  try {
    mean([1, 2, 'three']);
  } catch (e) {
    console.log('‚úì mean([1,2,"three"]) –≤—ã–±—Ä–æ—Å–∏–ª –æ—à–∏–±–∫—É:', e.message);
  }

  try {
    correlation([1, 2], [1, 2, 3]);
  } catch (e) {
    console.log('‚úì correlation —Å —Ä–∞–∑–Ω—ã–º–∏ –¥–ª–∏–Ω–∞–º–∏ –≤—ã–±—Ä–æ—Å–∏–ª –æ—à–∏–±–∫—É:', e.message);
  }

  console.log('\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');

} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  process.exit(1);
}
